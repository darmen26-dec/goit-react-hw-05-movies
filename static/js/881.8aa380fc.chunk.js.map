{"version":3,"file":"static/js/881.8aa380fc.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nconst API_KEY = 'ff637f30e47aba984ca1bbe10eb189d9';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieID => {\n  try {\n    const response = await axios.get(`movie/${movieID}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getCast = async movieID => {\n  try {\n    const response = await axios.get(\n      `movie/${movieID}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching cast details:', error);\n    throw error;\n  }\n};\n\nexport const getReviews = async movieID => {\n  try {\n    const response = await axios.get(\n      `movie/${movieID}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Movies_searchbar__IBimh\",\"searchForm\":\"Movies_searchForm__J4-xw\",\"searchFormButton\":\"Movies_searchFormButton__C6hnw\",\"searchFormInput\":\"Movies_searchFormInput__9CWXR\",\"searchList\":\"Movies_searchList__acL74\"};","import React, { useEffect, useState } from 'react';\nimport { searchMovies } from 'components/Api/Api';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { elements } = e.currentTarget;\n\n    const newQuery = elements.query ? elements.query.value : '';\n\n    if (newQuery !== '') {\n      setSearchParams({ query: newQuery });\n      setQuery(newQuery);\n    } else {\n      setSearchParams({});\n      setQuery('');\n    }\n\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    console.log(query);\n    if (query) {\n      searchMovies(query).then(data => {\n        setMovies(data);\n      });\n    }\n  }, [query]);\n\n  return (\n    <div className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.searchFormInput}\n          type=\"text\"\n          name=\"query\"\n          defaultValue={query || ''}\n        />\n        <button type=\"submit\" className={css.searchFormButton}>\n          Search\n        </button>\n      </form>\n      {movies.length === 0 && query ? (\n        <div>No results. Please try again.</div>\n      ) : (\n        <ul className={css.searchList}>\n          {movies.map(movie => (\n            <li key={movie.id} className={css.searchItem}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","results","_x","getMovieDetails","_ref3","_callee3","movieID","_context3","_x2","getCast","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","get","_useState4","setQuery","location","useLocation","useEffect","log","then","_jsxs","className","css","children","onSubmit","e","preventDefault","elements","currentTarget","newQuery","value","reset","_jsx","type","name","defaultValue","length","map","movie","NavLink","to","id","state","from","title"],"sourceRoot":""}