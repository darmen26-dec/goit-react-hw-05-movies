{"version":3,"file":"static/js/76.840783b1.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QADiB,gCAGjB,IAAMC,EAAU,mCAEHC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENV,EAAAA,EAAAA,IAAU,8BAADW,OAA+BV,IAAW,KAAD,EAA3D,OAARM,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,OAEoC,MAFpCN,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpBQ,QAAQC,MAAM,kCAAiCT,EAAAO,IAASP,EAAAO,GAAA,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAG3D,kBAR6B,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAUjBC,EAAY,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAMC,GAAK,IAAAjB,EAAA,OAAAF,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEZV,EAAAA,EAAAA,IAAU,wBAADW,OACNV,EAAO,WAAAU,OAAUa,IACzC,KAAD,EAFa,OAARjB,EAAQkB,EAAAb,KAAAa,EAAAZ,OAAA,SAGPN,EAASO,KAAKY,SAAO,OAEoB,MAFpBD,EAAAhB,KAAA,EAAAgB,EAAAV,GAAAU,EAAA,SAE5BT,QAAQC,MAAM,0BAAyBQ,EAAAV,IAASU,EAAAV,GAAA,yBAAAU,EAAAP,OAAA,GAAAK,EAAA,kBAGnD,gBAVwBI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAYZQ,EAAe,eAAAC,GAAAzB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyB,EAAMC,GAAO,IAAAxB,EAAA,OAAAF,IAAAA,MAAA,SAAA2B,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEjBV,EAAAA,EAAAA,IAAU,SAADW,OAAUoB,EAAO,aAAApB,OAAYV,IAAW,KAAD,EAAzD,OAARM,EAAQyB,EAAApB,KAAAoB,EAAAnB,OAAA,SACPN,EAASO,MAAI,OAEkC,MAFlCkB,EAAAvB,KAAA,EAAAuB,EAAAjB,GAAAiB,EAAA,SAEpBhB,QAAQC,MAAM,gCAA+Be,EAAAjB,IAASiB,EAAAjB,GAAA,yBAAAiB,EAAAd,OAAA,GAAAY,EAAA,kBAGzD,gBAR2BG,GAAA,OAAAJ,EAAAV,MAAA,KAAAC,UAAA,KAUfc,EAAO,eAAAC,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+B,EAAML,GAAO,IAAAxB,EAAA,OAAAF,IAAAA,MAAA,SAAAgC,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAETV,EAAAA,EAAAA,IAAU,SAADW,OACrBoB,EAAO,qBAAApB,OAAoBV,IACpC,KAAD,EAFa,OAARM,EAAQ8B,EAAAzB,KAAAyB,EAAAxB,OAAA,SAGPN,EAASO,MAAI,OAEiC,MAFjCuB,EAAA5B,KAAA,EAAA4B,EAAAtB,GAAAsB,EAAA,SAEpBrB,QAAQC,MAAM,+BAA8BoB,EAAAtB,IAASsB,EAAAtB,GAAA,yBAAAsB,EAAAnB,OAAA,GAAAkB,EAAA,kBAGxD,gBAVmBE,GAAA,OAAAH,EAAAhB,MAAA,KAAAC,UAAA,KAYPmB,EAAU,eAAAC,GAAApC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoC,EAAMV,GAAO,IAAAxB,EAAA,OAAAF,IAAAA,MAAA,SAAAqC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAEZV,EAAAA,EAAAA,IAAU,SAADW,OACrBoB,EAAO,qBAAApB,OAAoBV,IACpC,KAAD,EAFa,OAARM,EAAQmC,EAAA9B,KAAA8B,EAAA7B,OAAA,SAGPN,EAASO,KAAKY,SAAO,OAEoB,MAFpBgB,EAAAjC,KAAA,EAAAiC,EAAA3B,GAAA2B,EAAA,SAE5B1B,QAAQC,MAAM,0BAAyByB,EAAA3B,IAAS2B,EAAA3B,GAAA,yBAAA2B,EAAAxB,OAAA,GAAAuB,EAAA,kBAGnD,gBAVsBE,GAAA,OAAAH,EAAArB,MAAA,KAAAC,UAAA,I,qIClDvB,GAAgB,aAAe,2BAA2B,SAAW,uBAAuB,aAAe,2BAA2B,SAAW,uBAAuB,UAAY,wBAAwB,UAAY,wBAAwB,eAAiB,8B,kBC8EjQ,EAzEa,WACX,IAAQwB,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAsCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAgCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAqB5B,OAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAtD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAoD,EAAA,OAAArD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKwB,EAAAA,EAAAA,IAAQU,GAAS,KAAD,EAAhCc,EAAOlD,EAAAI,KACT+C,MAAMC,QAAQF,EAAQG,MACxBN,EAAYG,EAAQG,MAEpB7C,QAAQC,MAAM,8CACfT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEDQ,QAAQC,MAAM,4CAA2CT,EAAAO,IAAS,QAE5C,OAF4CP,EAAAC,KAAA,GAElE0C,GAAe,GAAO3C,EAAAsD,OAAA,6BAAAtD,EAAAU,OAAA,GAAAZ,EAAA,wBAEzB,kBAbiB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAelBqC,GACF,GAAG,CAACb,IAECU,GAAgC,IAApBA,EAASS,QAexBC,EAAAA,EAAAA,KAAA,OAAAC,SACGf,GACCc,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KAEPF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,SAAaH,SACzBX,EAASe,KAAI,SAAAR,GAAI,OAChBG,EAAAA,EAAAA,KAAA,MAAkBG,UAAWC,EAAAA,SAAaH,UACxCK,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,aAAiBH,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,OACEG,UAAWC,EAAAA,SACXG,IACEV,EAAKW,aAAY,kCAAA7D,OACqBkD,EAAKW,cACvC,+EAENC,IAAKZ,EAAKa,iBAEZJ,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,UAAcH,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAAA,UAAcH,UAC1BD,EAAAA,EAAAA,KAAA,UAAAC,SAASJ,EAAKc,UAEhBL,EAAAA,EAAAA,MAAA,KAAGH,UAAWC,EAAAA,eAAmBH,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,eAAmB,IAAEJ,EAAKe,oBAhBjCf,EAAKgB,GAoBT,SAvCXb,EAAAA,EAAAA,KAAA,OAAAC,SACGf,GACCc,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KAEPF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,aAAiBH,SAAC,oDAyC3C,C","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nconst API_KEY = 'ff637f30e47aba984ca1bbe10eb189d9';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieID => {\n  try {\n    const response = await axios.get(`movie/${movieID}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const getCast = async movieID => {\n  try {\n    const response = await axios.get(\n      `movie/${movieID}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching cast details:', error);\n    throw error;\n  }\n};\n\nexport const getReviews = async movieID => {\n  try {\n    const response = await axios.get(\n      `movie/${movieID}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"errorHeading\":\"Cast_errorHeading__w7tT2\",\"castList\":\"Cast_castList__ARoWn\",\"actorWrapper\":\"Cast_actorWrapper__-QHN7\",\"actorImg\":\"Cast_actorImg__T6qL2\",\"actorInfo\":\"Cast_actorInfo__8ZWx-\",\"actorName\":\"Cast_actorName__XabVA\",\"actorCharacter\":\"Cast_actorCharacter__m+TBZ\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'components/Api/Api';\nimport css from 'components/Cast/Cast.module.css';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [dataLoading, setDataLoading] = useState(true);\n  const [castData, setCastData] = useState(null);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const details = await getCast(movieId);\n        if (Array.isArray(details.cast)) {\n          setCastData(details.cast);\n        } else {\n          console.error('Invalid data format: cast is not an array.');\n        }\n      } catch (error) {\n        console.error('Error occurred while fetching movie data:', error);\n      } finally {\n        setDataLoading(false);\n      }\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  if (!castData || castData.length === 0) {\n    return (\n      <div>\n        {dataLoading ? (\n          <Loader />\n        ) : (\n          <h1 className={css.errorHeading}>\n            Sorry, there is no cast information available!\n          </h1>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {dataLoading ? (\n        <Loader />\n      ) : (\n        <ul className={css.castList}>\n          {castData.map(cast => (\n            <li key={cast.id} className={css.listItem}>\n              <div className={css.actorWrapper}>\n                <img\n                  className={css.actorImg}\n                  src={\n                    cast.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                      : 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n                  }\n                  alt={cast.original_name}\n                />\n                <div className={css.actorInfo}>\n                  <p className={css.actorName}>\n                    <strong>{cast.name}</strong>\n                  </p>\n                  <p className={css.actorCharacter}>\n                    <strong>Character:</strong> {cast.character}\n                  </p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","results","_x","getMovieDetails","_ref3","_callee3","movieID","_context3","_x2","getCast","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","dataLoading","setDataLoading","_useState3","_useState4","castData","setCastData","useEffect","getMovieCast","details","Array","isArray","cast","finish","length","_jsx","children","Loader","className","css","map","_jsxs","src","profile_path","alt","original_name","name","character","id"],"sourceRoot":""}